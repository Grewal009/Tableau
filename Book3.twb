<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFiltersHamburgerUI />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0u8wie81703ue81bxyh4f08ks6zz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Aneel/Documents/My Tableau Repository/Datasources/2022.2/en_US-EU/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0u8wie81703ue81bxyh4f08ks6zz' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0u8wie81703ue81bxyh4f08ks6zz' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3804021F3D8B4312A3B21E12E192EBA6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product Name]' new-bin='true'>
          <bin default-name='false' value='&quot;Acco&quot;'>
            <value>&quot;Acco 6 Outlet Guardian Basic Surge Suppressor&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Premium Plus Surge Suppressor&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Premium Surge Suppressor&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Standard Surge Suppressor&quot;</value>
            <value>&quot;Acco 7-Outlet Masterpiece Power Center, Wihtout Fax/Phone Line Protection&quot;</value>
            <value>&quot;Acco Banker&apos;s Clasps, 5 3/4\&quot;-Long&quot;</value>
            <value>&quot;Acco Clips to Go Binder Clips, 24 Clips in Two Sizes&quot;</value>
            <value>&quot;Acco D-Ring Binder w/DublLock&quot;</value>
            <value>&quot;Acco Data Flex Cable Posts For Top &amp; Bottom Load Binders, 6\&quot; Capacity&quot;</value>
            <value>&quot;Acco Economy Flexible Poly Round Ring Binder&quot;</value>
            <value>&quot;Acco Expandable Hanging Binders&quot;</value>
            <value>&quot;Acco Flexible ACCOHIDE Square Ring Data Binder, Dark Blue, 11 1/2\&quot; X 14\&quot; 7/8\&quot;&quot;</value>
            <value>&quot;Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\&quot;&quot;</value>
            <value>&quot;Acco Glide Clips&quot;</value>
            <value>&quot;Acco Hanging Data Binders&quot;</value>
            <value>&quot;Acco Hot Clips Clips to Go&quot;</value>
            <value>&quot;Acco Perma 2700 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Perma 3000 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Perma 4000 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Dark Blue&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Executive Red&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Light Blue&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 9 1/2\&quot; x 11\&quot;, Executive Red&quot;</value>
            <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 14 7/8\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Light Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco Recycled 2\&quot; Capacity Laser Printer Hanging Data Binders&quot;</value>
            <value>&quot;Acco Side-Punched Conventional Columnar Pads&quot;</value>
            <value>&quot;Acco Six-Outlet Power Strip, 4&apos; Cord Length&quot;</value>
            <value>&quot;Acco Smartsocket Color-Coded Six-Outlet AC Adapter Model Surge Protectors&quot;</value>
            <value>&quot;Acco Smartsocket Table Surge Protector, 6 Color-Coded Adapter Outlets&quot;</value>
            <value>&quot;Acco Suede Grain Vinyl Round Ring Binder&quot;</value>
            <value>&quot;Acco Translucent Poly Ring Binders&quot;</value>
            <value>&quot;ACCOHIDE 3-Ring Binder, Blue, 1\&quot;&quot;</value>
            <value>&quot;ACCOHIDE Binder by Acco&quot;</value>
            <value>&quot;Accohide Poly Flexible Ring Binders&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Acme&quot;'>
            <value>&quot;Acme 10\&quot; Easy Grip Assistive Scissors&quot;</value>
            <value>&quot;Acme Box Cutter Scissors&quot;</value>
            <value>&quot;Acme Design Line 8\&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8\&quot; Cut&quot;</value>
            <value>&quot;Acme Design Stainless Steel Bent Scissors&quot;</value>
            <value>&quot;Acme Elite Stainless Steel Scissors&quot;</value>
            <value>&quot;Acme Forged Steel Scissors with Black Enamel Handles&quot;</value>
            <value>&quot;Acme Galleria Hot Forged Steel Scissors with Colored Handles&quot;</value>
            <value>&quot;Acme Hot Forged Carbon Steel Scissors with Nickel-Plated Handles, 3 7/8\&quot; Cut, 8\&quot;L&quot;</value>
            <value>&quot;Acme Kleen Earth Office Shears&quot;</value>
            <value>&quot;Acme Kleencut Forged Steel Scissors&quot;</value>
            <value>&quot;Acme Office Executive Series Stainless Steel Trimmers&quot;</value>
            <value>&quot;Acme Preferred Stainless Steel Scissors&quot;</value>
            <value>&quot;Acme Rosewood Handle Letter Opener&quot;</value>
            <value>&quot;Acme Serrated Blade Letter Opener&quot;</value>
            <value>&quot;Acme Softgrip Scissors&quot;</value>
            <value>&quot;Acme Stainless Steel Office Snips&quot;</value>
            <value>&quot;Acme Tagit Stainless Steel Antibacterial Scissors&quot;</value>
            <value>&quot;Acme Titanium Bonded Scissors&quot;</value>
            <value>&quot;Acme Value Line Scissors&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Sub-Category (visually) 1' datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Accessories, Appliances, Art&quot;'>
            <value>&quot;Accessories&quot;</value>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Art&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Sub-Category (label)' datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='true' value='&quot;Accessories, Appliances, Art&quot;'>
            <value>&quot;Accessories&quot;</value>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Art&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Chairs, Copiers, Envelopes&quot;'>
            <value>&quot;Chairs&quot;</value>
            <value>&quot;Copiers&quot;</value>
            <value>&quot;Envelopes&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_3804021F3D8B4312A3B21E12E192EBA6]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_3804021F3D8B4312A3B21E12E192EBA6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_3804021F3D8B4312A3B21E12E192EBA6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Region]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:11]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Pane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Customer Set' name='[Customer Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Customer Name]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Customer Name]' member='&quot;Aaron Bergman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Aaron Hawkins&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Adrian Hane&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Adrian Shami&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Aimee Bixby&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Alan Barnes&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Alan Haines&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Alan Shonely&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Alejandro Ballentine&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Aleksandra Gannaway&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Alex Grayson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Alex Russell&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Alice McCarthy&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Allen Armold&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Allen Goldenen&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Alyssa Crouse&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Alyssa Tate&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Andrew Allen&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Andrew Roberts&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Andy Gerbode&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Andy Yotov&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Anemone Ratner&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Angele Hood&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ann Blume&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ann Steele&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Anna Chung&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Anne Pryor&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Annie Zypern&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Anthony Garverick&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Anthony O&apos;Donnell&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Anthony Witt&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Art Foster&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ashley Jarboe&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Astrea Jones&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Barbara Fisher&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Barry Blumstein&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Barry Franz&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Barry Pond&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Barry Weirich&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bart Folk&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Becky Pak&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ben Wallace&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Benjamin Farhat&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Benjamin Patterson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Benjamin Venier&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Berenike Kampe&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Beth Fritzler&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bobby Odegard&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bobby Trafton&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Brad Eason&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Brad Norvell&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Brad Thomas&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bradley Nguyen&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Brendan Dodson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Brendan Murry&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Brian DeCherney&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Brian Derr&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Brooke Gillingham&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bruce Degenhardt&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bruce Galang&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bruce Geld&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bryan Davis&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bryan Mills&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Bryan Spruell&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Candace McMahon&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Cari Sayre&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Cari Schnelling&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Carl Jackson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Carl Ludwig&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Carl Weiss&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Carlos Meador&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Carol Darley&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Catherine Glotzbach&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Cathy Armstrong&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Cathy Hwang&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Chad Cunningham&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Chad McGuire&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Chad Sievert&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Charles Sheldon&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Charlotte Melton&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Christina DeMoss&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Christine Abelman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Christy Brittain&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Chuck Magee&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Chuck Sachs&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Cindy Chapman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Cindy Schnelling&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Claire Gute&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Clay Cheatham&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Corey Roper&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Corey-Lock&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Craig Reiter&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Cyma Kinney&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Cynthia Delaney&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Cyra Reiten&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Dan Lawera&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Dario Medina&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Darren Koutras&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Darren Powers&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Darrin Sayre&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Darrin Van Huff&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;David Kendrick&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;David Philippe&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;David Wiener&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Debra Catini&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Delfina Latchford&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Denise Leinenbach&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Dennis Bolton&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Denny Ordway&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Dianna Arnett&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Don Miller&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Don Weiss&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Dorothy Dickinson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Dorothy Wardle&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Dorris liebe&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Doug Bickford&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Duane Benoit&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Duane Huffman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ed Ludwig&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Eileen Kiefer&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Elpida Rittenbach&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Emily Grady&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Eric Barreto&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Eric Hoffmann&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Eric Murdock&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Erica Bern&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Erica Hackney&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Erica Hernandez&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Erin Creighton&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Erin Mull&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Eudokia Martin&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Evan Bailliet&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Evan Henry&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Evan Minnotte&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Fred Wasserman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Gene Hale&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Gene McClure&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;George Bell&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Georgia Rosenberg&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Giulietta Dortch&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Greg Hansen&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Guy Armstrong&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Guy Phonely&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Guy Thornton&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Hallie Redmond&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Harold Dahlen&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Harold Engle&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Harold Pawlan&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Harry Greene&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Harry Olson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Heather Jas&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Henia Zydlo&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Henry MacAllister&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Hilary Holden&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ivan Gibson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jack Lebron&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;James Lanier&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;James Peterman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Janet Molinari&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jas O&apos;Carroll&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jason Fortune-&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jason Klamczynski&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jasper Cacioppo&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jay Fein&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jenna Caffey&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Braxton&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Halladay&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Jackson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Patt&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Sheldon&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jeremy Ellison&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jeremy Farry&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jesus Ocampo&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jill Matthias&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jill Stevenson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jill Trafton&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jim Mitchum&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jim Radford&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jim Sink&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jocasta Rupert&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Joel Jenkins&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;John Grady&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;John Huston&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Jonathan Howell&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Joni Blumstein&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Joni Sundaresam&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Joni Wasserman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Joy Bell-&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Joy Daniels&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Julia Dunbar&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Julia West&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Julie Creighton&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Julie Prescott&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Karen Seio&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Karl Braun&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Katherine Ducich&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Katrina Bavinger&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Katrina Edelman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Kelly Andreada&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Kelly Williams&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ken Brennan&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Khloe Miller&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Kimberly Carter&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Larry Blacks&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Larry Hughes&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Larry Tron&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Laurel Elliston&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Lela Donovan&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Lisa DeCherney&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Lisa Hazard&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Lisa Ryan&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Liz MacKendrick&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Liz Pelletier&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Liz Willingham&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Logan Haushalter&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Lori Olson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Luke Schmidt&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Lycoris Saunders&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Lynn Smith&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Magdelene Morse&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Maria Bertelson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Maria Zettner&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Mark Haberlin&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Mark Van Huff&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Mary O&apos;Rourke&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;MaryBeth Skach&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Mathew Reese&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Matt Collins&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Matt Hagelstein&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Matthew Clasen&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Maureen Fritzler&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Maureen Gnade&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Maurice Satty&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Max Engle&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Meg O&apos;Connel&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Melanie Seite&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Michael Dominguez&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Michael Grace&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Michael Granlund&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Michael Knudson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Michael Oakman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Michael Stewart&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Michelle Ellison&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Michelle Lonsdale&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Michelle Tran&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Mick Brown&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Mike Caudle&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Mike Kennedy&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Mike Vittorini&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Mitch Gastineau&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Monica Federle&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Muhammed Lee&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Muhammed MacIntyre&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Nancy Lomonaco&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Nat Gilpin&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Nathan Gelder&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Neil Cohen&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Neil Französisch&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Neil Knudson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Nicole Brennan&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Noah Childs&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Nona Balk&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Nora Pelletier&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Odella Nelson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Pamela Coakley&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Parhena Norris&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Patricia Hirasaki&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Patrick Bzostek&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Patrick Jones&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Patrick Ryan&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Paul Gonzalez&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Paul Knutson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Paul Lucas&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Paul MacIntyre&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Paul Stevenson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Pauline Chand&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Pauline Johnson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Pete Armstrong&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Pete Takahito&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Peter Bühler&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Philip Brown&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Phillina Ober&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Phillip Breyer&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Rachel Payne&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ralph Kennedy&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ralph Ritter&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Randy Bradley&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Raymond Messe&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ricardo Emerson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Richard Eichhorn&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ritsa Hightower&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Rob Beeghly&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Robert Barroso&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Roger Demir&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Roland Murray&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ross DeVincentis&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Roy Collins&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Roy Französisch&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Roy Skaria&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Russell D&apos;Ascenzo&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ryan Akin&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ryan Crowe&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sally Knutson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sally Matthias&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sandra Flanagan&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Saphhira Shifley&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sarah Bern&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sarah Jordon&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Scot Wooten&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Scott Williamson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sean Wendt&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Shaun Chance&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sheri Gordon&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Shirley Jackson&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Shirley Schmidt&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Shui Tom&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sibella Parks&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Skye Norling&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sonia Cooley&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sonia Sunley&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Stephanie Phelps&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Steve Carroll&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Steven Ward&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Stuart Calhoun&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Stuart Van&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sung Chung&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Sung Shariari&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Susan Gilcrest&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Susan MacKendrick&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Susan Vittorini&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Tamara Dahlen&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Ted Butterfield&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Thais Sissman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Theresa Coyne&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Thomas Brumley&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Thomas Thornton&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Tiffany House&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Tim Brockman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Tim Taslimi&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Toby Ritter&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Toby Swindell&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Todd Boyes&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Tony Chapman&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Tony Molinari&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Tracy Collins&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Tracy Poddar&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Troy Blackwell&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Valerie Takahito&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Vicky Freymann&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Victor Preis&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Vivek Gonzalez&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Vivek Grady&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Vivek Sundaresam&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Vivian Mathis&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='&quot;Zuschuss Donatelli&quot;' />
                <groupfilter function='member' level='[Customer Name]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country Hierarchy'>
          <field>[Country/Region]</field>
          <field>[State/Province]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Aneel/Documents/My Tableau Repository/Datasources/Orders (Sample - Superstore).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/27/2022 08:38:43 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Orders (Sample - Superstore)' increment-value='%null%' refresh-type='create' rows-inserted='10194' timestamp-start='2022-09-27 20:38:40.469' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10194</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3384</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1478</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1399</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1175</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1175</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>592</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State/Province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State/Province]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State/Province</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>711</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2138</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2094</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3373</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3856</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State/Province:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Sub-Category (group) 1]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories, Appliances, Art&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Binders, Bookcases, Chairs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[pcto:sum:Profit:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[__tableau_internal_object_id__].[cnt:Orders_3804021F3D8B4312A3B21E12E192EBA6:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[avg:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[pcto:sum:Sales:qk:11]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[pcto:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[pcto:sum:Sales:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[pcto:sum:Sales:qk:6]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_3804021F3D8B4312A3B21E12E192EBA6'>
            <properties context=''>
              <relation connection='excel-direct.0u8wie81703ue81bxyh4f08ks6zz' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Hierarchy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Country/Region:nk]'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;United States&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Longitude (generated)]' field-type='quantitative' max='-4764937.789880095' min='-14603972.001581578' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Latitude (generated)]' field-type='quantitative' max='6679936.8991886843' min='1933343.703969385' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Country/Region:nk]' />
              <lod column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:State/Province:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Latitude (generated)]</rows>
        <cols>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{318C942F-F067-4714-BB3F-C76DCD60F44F}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f9a655' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]</rows>
        <cols>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{73324828-56FE-4623-BC9F-67F70EA7E791}' />
    </worksheet>
    <worksheet name='combined axis chart (trick)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Multiple Values]' scope='rows' value='sales and profit' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Multiple Values]</rows>
        <cols>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{99BC9D4F-D79A-4AA1-B363-1537EB695161}' />
    </worksheet>
    <worksheet name='combined axix chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]' scope='rows' value='Sales and Profit' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk] + [federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk])</rows>
        <cols>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{54649EE7-5A40-4A4A-B910-7FE09E904F3B}' />
    </worksheet>
    <worksheet name='cross tabs/pivot tabs/ text table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[pcto:sum:Sales:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Category:nk] / [federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk])</rows>
        <cols total='true'>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Region:nk]</cols>
        <subtotals>
          <column>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Category:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{FEAFAB0B-3DC4-4FFB-9F9F-0A1D083CE5EB}' />
    </worksheet>
    <worksheet name='filled map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Longitude (generated)]' field-type='quantitative' max='-6237651.0856993767' min='-14067498.778718261' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Latitude (generated)]' field-type='quantitative' max='6507234.9134128261' min='2729922.9354661671' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' />
              <text column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]' />
              <lod column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:State/Province:nk]' />
              <geometry column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Latitude (generated)]</rows>
        <cols>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FA6DC536-88CF-4471-9D13-39795C03C0C6}' />
    </worksheet>
    <worksheet name='group'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product Name]' new-bin='true'>
                <bin default-name='false' value='&quot;Acco&quot;'>
                  <value>&quot;Acco 6 Outlet Guardian Basic Surge Suppressor&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Premium Plus Surge Suppressor&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Premium Surge Suppressor&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Standard Surge Suppressor&quot;</value>
                  <value>&quot;Acco 7-Outlet Masterpiece Power Center, Wihtout Fax/Phone Line Protection&quot;</value>
                  <value>&quot;Acco Banker&apos;s Clasps, 5 3/4\&quot;-Long&quot;</value>
                  <value>&quot;Acco Clips to Go Binder Clips, 24 Clips in Two Sizes&quot;</value>
                  <value>&quot;Acco D-Ring Binder w/DublLock&quot;</value>
                  <value>&quot;Acco Data Flex Cable Posts For Top &amp; Bottom Load Binders, 6\&quot; Capacity&quot;</value>
                  <value>&quot;Acco Economy Flexible Poly Round Ring Binder&quot;</value>
                  <value>&quot;Acco Expandable Hanging Binders&quot;</value>
                  <value>&quot;Acco Flexible ACCOHIDE Square Ring Data Binder, Dark Blue, 11 1/2\&quot; X 14\&quot; 7/8\&quot;&quot;</value>
                  <value>&quot;Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\&quot;&quot;</value>
                  <value>&quot;Acco Glide Clips&quot;</value>
                  <value>&quot;Acco Hanging Data Binders&quot;</value>
                  <value>&quot;Acco Hot Clips Clips to Go&quot;</value>
                  <value>&quot;Acco Perma 2700 Stacking Storage Drawers&quot;</value>
                  <value>&quot;Acco Perma 3000 Stacking Storage Drawers&quot;</value>
                  <value>&quot;Acco Perma 4000 Stacking Storage Drawers&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Dark Blue&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Executive Red&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Light Blue&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 9 1/2\&quot; x 11\&quot;, Executive Red&quot;</value>
                  <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 14 7/8\&quot; X 11\&quot;&quot;</value>
                  <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
                  <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Light Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
                  <value>&quot;Acco Recycled 2\&quot; Capacity Laser Printer Hanging Data Binders&quot;</value>
                  <value>&quot;Acco Side-Punched Conventional Columnar Pads&quot;</value>
                  <value>&quot;Acco Six-Outlet Power Strip, 4&apos; Cord Length&quot;</value>
                  <value>&quot;Acco Smartsocket Color-Coded Six-Outlet AC Adapter Model Surge Protectors&quot;</value>
                  <value>&quot;Acco Smartsocket Table Surge Protector, 6 Color-Coded Adapter Outlets&quot;</value>
                  <value>&quot;Acco Suede Grain Vinyl Round Ring Binder&quot;</value>
                  <value>&quot;Acco Translucent Poly Ring Binders&quot;</value>
                  <value>&quot;ACCOHIDE 3-Ring Binder, Blue, 1\&quot;&quot;</value>
                  <value>&quot;ACCOHIDE Binder by Acco&quot;</value>
                  <value>&quot;Accohide Poly Flexible Ring Binders&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Acme&quot;'>
                  <value>&quot;Acme 10\&quot; Easy Grip Assistive Scissors&quot;</value>
                  <value>&quot;Acme Box Cutter Scissors&quot;</value>
                  <value>&quot;Acme Design Line 8\&quot; Stainless Steel Bent Scissors w/Champagne Handles, 3-1/8\&quot; Cut&quot;</value>
                  <value>&quot;Acme Design Stainless Steel Bent Scissors&quot;</value>
                  <value>&quot;Acme Elite Stainless Steel Scissors&quot;</value>
                  <value>&quot;Acme Forged Steel Scissors with Black Enamel Handles&quot;</value>
                  <value>&quot;Acme Galleria Hot Forged Steel Scissors with Colored Handles&quot;</value>
                  <value>&quot;Acme Hot Forged Carbon Steel Scissors with Nickel-Plated Handles, 3 7/8\&quot; Cut, 8\&quot;L&quot;</value>
                  <value>&quot;Acme Kleen Earth Office Shears&quot;</value>
                  <value>&quot;Acme Kleencut Forged Steel Scissors&quot;</value>
                  <value>&quot;Acme Office Executive Series Stainless Steel Trimmers&quot;</value>
                  <value>&quot;Acme Preferred Stainless Steel Scissors&quot;</value>
                  <value>&quot;Acme Rosewood Handle Letter Opener&quot;</value>
                  <value>&quot;Acme Serrated Blade Letter Opener&quot;</value>
                  <value>&quot;Acme Softgrip Scissors&quot;</value>
                  <value>&quot;Acme Stainless Steel Office Snips&quot;</value>
                  <value>&quot;Acme Tagit Stainless Steel Antibacterial Scissors&quot;</value>
                  <value>&quot;Acme Titanium Bonded Scissors&quot;</value>
                  <value>&quot;Acme Value Line Scissors&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='313' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Product Name (group)]</rows>
        <cols />
      </table>
      <simple-id uuid='{D985F2C6-F350-41AF-B1ED-6A52436A4FC2}' />
    </worksheet>
    <worksheet name='group by labels &amp; visually'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Sub-Category (label)' datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='true' value='&quot;Accessories, Appliances, Art&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Chairs, Copiers, Envelopes&quot;'>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]</rows>
        <cols>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Sub-Category (group)]</cols>
      </table>
      <simple-id uuid='{B002A34A-1D35-461F-A1BD-175DA249247A}' />
    </worksheet>
    <worksheet name='group by visually'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Sub-Category (visually) 1' datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Accessories, Appliances, Art&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Sub-Category (group) 1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]</rows>
        <cols>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{1B2535B2-6005-49A2-AD7A-6A8F1D663067}' />
    </worksheet>
    <worksheet name='heat maps'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' value='249' />
            <format attr='height' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk]' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' />
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Category:nk] / [federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{1E82935C-FF68-447C-9087-58D72B28074F}' />
    </worksheet>
    <worksheet name='highlight tables'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='322' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Category:nk] / [federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{566F90BE-D0DA-485D-983C-C44615014D38}' />
    </worksheet>
    <worksheet name='pie chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Region:nk]' />
              <wedge-size column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' />
              <size column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1B87BA36-E445-4290-876D-C0523D9BD793}' />
    </worksheet>
    <worksheet name='sets'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Customer Set]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Customer Set]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Customer Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Customer Set]</rows>
        <cols />
      </table>
      <simple-id uuid='{589B094D-1C58-4345-827D-F4C7DE755721}' />
    </worksheet>
    <worksheet name='symbol map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1btww4j1u7nb0t1eiyzti0ob5t06' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1btww4j1u7nb0t1eiyzti0ob5t06'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:State/Province:nk]'>
            <groupfilter function='level-members' level='[none:State/Province:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:State/Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Longitude (generated)]' field-type='quantitative' max='-5327747.1987857465' min='-14123655.839133307' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Latitude (generated)]' field-type='quantitative' max='6878319.2963533979' min='2634955.649097173' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='wrap' value='true' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' />
              <size column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[avg:Sales:qk]' />
              <text column='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:State/Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Latitude (generated)]</rows>
        <cols>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{35688B6A-39B2-43DE-B146-CD91D1521FE1}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7D85EA20-E7D1-4252-9478-D79383E28DC9}' />
    </window>
    <window class='worksheet' name='combined axis chart (trick)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]</field>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E8D9EEB-21A5-45DA-ABF5-84DB5C9827C2}' />
    </window>
    <window class='worksheet' name='combined axix chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40E2A4EE-5BA6-476F-9393-2EDB1CB52CDD}' />
    </window>
    <window class='worksheet' name='symbol map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:State/Province:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[avg:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:State/Province:nk]</field>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8BA73CB5-DB6B-447F-8C41-4B397208E708}' />
    </window>
    <window class='worksheet' name='filled map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A8968411-EF22-4F0D-BD98-32B2652BBCD7}' />
    </window>
    <window class='worksheet' name='cross tabs/pivot tabs/ text table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{17BD8DD7-8BD9-4551-AEF2-5EE0237AC6E7}' />
    </window>
    <window class='worksheet' name='pie chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FAFB382A-5992-4C76-B786-6ED00E64D460}' />
    </window>
    <window class='worksheet' name='highlight tables'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4DF2EA0-2AA0-4E0B-8BAF-4504CD643518}' />
    </window>
    <window class='worksheet' name='heat maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Profit:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Category:nk]</field>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D602D29-01A2-40FD-8AB0-2CB3B87DEF50}' />
    </window>
    <window class='worksheet' name='group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{67596C33-0E8C-4247-8F79-715286FC9C78}' />
    </window>
    <window class='worksheet' name='group by labels &amp; visually'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CEC346BC-2CB9-45F9-9488-B3C468C59AC7}' />
    </window>
    <window class='worksheet' name='group by visually'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[Sub-Category (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B52BFB44-1883-49BC-904A-47645E679A58}' />
    </window>
    <window class='worksheet' name='sets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[io:Customer Set:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CA2FCFF0-D171-4397-9DA9-899F97E79A5F}' />
    </window>
    <window class='worksheet' maximized='true' name='Hierarchy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1btww4j1u7nb0t1eiyzti0ob5t06].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AD0F8A5-181E-4281-ACD5-A9E3AF434BC7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hierarchy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='combined axis chart (trick)' width='192'>
      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
      XJMBkOLa/wcms1sJ3Wqu8QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='combined axix chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cross tabs/pivot tabs/ text table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='filled map' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='group' width='192'>
      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
      KyadmnjIh2R0YJSTRDIqxHSCEqeJjUiWwdsXGVvyc/4H/yWHqkxMjY4iGl201bqYnJiior6O
      lfll9HYHvsn7hNRVHH/iCPrMJvpCJ575KaI5PXt2txCfus6PBmVePn2IigKZqWU/DoeDMoeB
      8akFKmprUWsM5BNh7KWV6NVKHUjxm0kkEr+FgBhZIrYZJSersdsKfmWdPJtJo9Lo0Kg//eEj
      5TJk0WDQqv9Zu6VQfBaPFIBcLqfEAyh2lEdegvP5vFIAFDvKNv0AMiHvOgtLq2TF9wuEnMe7
      tsy6N4QEIEv4N1ZZcfv5eJGJhMNs27Ivy/jdK8zOzhJNfkpcwKfsRyLiZ2FxhUz+n//Cm4yG
      yeQhtRkikVEK+uNMlmU8Hg9ra2sfjnCIx+MsLi6Sz2/doYFAYLsCkMPnCbA23UPH8NYIybWx
      h9wdmie+GUcCNmb7udMzwWYwzMdv5dtXr5F6/++VmXFiH49jkXPcuXydaCZDXvr0Gzq23E/H
      zFZwTCbm5dLl20Q3wyRT4q886LH++6yFUtsun7hzlZUkzHW+w8h6ZtvvKb78kskky8vLTE9P
      4/f7kSSJ3t5ewuEwQ0NDJJNJLl26tF0/gA6LPk/Hcogn92615k9OLyCrrLiDERoaqpibn+PQ
      ia/RWGzk/r1b7Nt/mPv9Y0iZKNffeo28uZHi5DJpWeTNnglaDxzj+O5KsqlN5ufmsOrUvNfZ
      jySoOXa4ie7BWVQ6M5XqVe5752ksfQXWF7DXHeTg/mY2pvv4cd8saq2VJoueyudOMHm1H6t2
      hbmkjXgCjJEhUrMpzuzScrNjHHt1KwbvLOrq/bz03AmQM9y5fIHcwiRtZT5+8h/fJZjR8Ef/
      6j+n0PA5Xh3F75zJZKK1tZWxsTFsNhuCIJDP51lZWUEURfL5PIcOHdrmCSBmKahq5StPtTEz
      twSAw2an9chTbC4NEE5J2K1W1jd8ZJJJMtksmWyaRCqDSlfA0y+cIxXwI4oiGwtr7D39HIdb
      qwGwFtbw8te+hjkbonLfU7S4JIbG1zh45jmKNJtU1Law58hJiq0GjDY7Ya+bbDbN4soGh888
      h1MIEUlkyKSzxJNpZODI6fMUqLM0t+7n1OnjbMzOUFS7m6aaYlQGJ8+eO44WQNBz7qWvc/pw
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='group by labels &amp; visually' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAU2ElEQVR4nO3dWXMc13nG8X8vs2EW7CsJggBEEhBIACLBTaRlquKKF9llK5Uql5Pc5Saf
      IN8g17lM5TauSqXKdlVcLtlyvJAUKVELuAIEARAkdmAwM5h9n+nuXICkKQuiSE0DoNjv72rQ
      GJxzujHPdJ8zwNuKZVkWQjiUutcDEGIvSQCEo0kAhKNJAISjSQDES6layjF77y7rm+nPbU9G
      olT+6rm5RIS7U7Pky8YL9yMBEC8hi/HLv2U1VWFtPfy573z83vsknt5QivM/v/wdVaNMvlx9
      snlzeZJrNxa+sidFlkHFy8diceJD/jA+z/E33ya6eIdzp0/z+48n8S3dJdEcomh28cOz/RiJ
      B1yMdvCPb79OpRjj5//5X8xVQvxoQOUPE3ne/cEZfvf+n6j69/HOG42MP0iTLJl8q9fHxMOo
      nAHEyynYfph/+tlPuPrerylUKhRLBQqlMqoe4O3vfw8zHSUVj0GgjeTSfUqlAtGH01RbD6FU
      MvQNDHHi9AV8+WW8nYNcODnEajjCd374LkG9zNpmhnMjvXIGEC8ji/UHk3x8a5a+kbO0K1HG
      ZyK09/bTVI0ycX+NwVPf5vC+JhTFYunedcZnIpx9c5jxj26hNjTzt6df5+If/8TAqbeY+ewK
      RugARzss3v/gNml8/PM7Z/hwckUCIJwjGV7g1r0FDo+epqvRB+zhHMA0TVRVrsDE3tqzV6Bh
      vPiSlRB2k7dg4WgSAOFoEgDhaBIA4WgSAOFoNQfg4dR1Ll26SixbIrp8n09uzWBZFuGFacYn
      5jCtMvF4jko+RSyVs2PMQthGr+3HLTIVjQsXzmNU8tyM5DncYnHn/iqVksL+QIH59SilhMla
      JUrP4Ig9o3aoTL7Ez//vji1tvTXSw9HeNlva+iarMQAGhXiEixcvc+TYAMFgM40HPMxcCtN2
      pIX6gE4mtsnizCxNrw0R9GgYhoFpmpimSblctmcvHCKTK/D7Tx/Y0lZ3a5DD+xpsaeubrLYA
      VEt09h9Fy4fZzFoUEmss3DWp7+slth7G8JZxt3ZzcOA4mhElmi7SEvKiaRqVSgWXy2XTbjiD
      y/XXfwn/9Wmahtvttq29b6raAqDX4VXCJPRmBg+0k/MbhLMwcKCNpLfMZlHnQFszWZ+B39NM
      qmTaNGwh7FHjJZBCe3c/7Y++qm/dR33r1uPG9m4aH20PBrfe6RvlDUe8ZGQZVDiaBEA4mgRA
      OJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDia
      BEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDhajZXhAMuiahhomoZlGlRNcOka
      pmlgmqC7NCwTFMXCshRUVbFh2ELYo+YAlLIxfvN/V/nOd7/P7M0PyRYqHBl7k6XJGxSqBkNj
      o8RXiwT0BDT20N0StGPcQtii5vsDLMyv0P9aD1UjT7D1NU6+5uHjj5Zo6TvMvqDKSmyT5dkH
      NPUd5nhzEMMwsCxLyqN/DZVK1ba2TMOQ40+NASjFF7g7H8YobGJ5GtAqFcqZCq6gj1KxTNlt
      oepuunoPUyokKBsmHm1r2mFZFrpe+xWYk+g2lkdXNU3K01NjADxNvfzdj3tZW5mnvrWbtdlb
      XJuscurMGEt3bzAZVTk+NkhcLdHo9xPZTNPd3sDjWYCiyHzgRdh9tOT42zEJBrr29wJw6NgY
      hx5tGxg99eT7dfv9APjt6EwIG8kyqHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmA
      cDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0
      CYBwNAmAcDQJgHA0CYBwtNpKI1plbn86TqKsMHr8OLH5SZYTFc6cGWNp6iaRvMLYydeJb5QI
      eQpklRCdzQGbhi5E7WqsDaoxMDpG5MEk0WSSvOnn7JDO5N0lPP4WjnZYrK1HKSZNopUUgyMd
      WJb15KcfP364luDff/FxbUN55F9+PMbQwVZb2nrVPf27cKraAqBoJFZnWElV6G61qLp9eEIe
      KukYDS1NeLwqRi7F8tx9GnsP41LVR3eOMTFNk0plq9x3rlBiOZK2Y3/I5opP2n3V2Hl/AMMw
      Xtnj9CJqC0AxxVIsA+Us2aJOJjrFB6tV+kfPsDx1k1XDZOCNYXoGAoTcSRY3khzsaEDTNCqV
      ypP69HbeJ0DTddxut23tvUxcNt4fQNO0V/Y4vYjaXnmeECPDI5goeD1uzM7zVAzwuF10nDmL
      YSm43TotAQtV7cQwbRq1EDap8RJIweP1PvlS091oj1rUXe4njWva1o0YdK2m3oSw3XMsg1oU
      CgXiG6sk83JPKfFqeY4zQIL3fnGRbGUZT9Npfvbu2Z0flRC75DkCEMTvzdE1cBpDleVF8Wp5
      jgBotLY2o9eFUD11Oz8iIXbRc8wB0kxMPCQejjA7ubDjAxJiNz1HAEIcGz7A9PQsQydf3/kR
      CbGLnnkJVEiHuXL5M0qodPd0kc+kgYZdGpoQO++ZZwC3r4HhE8dQqmVCvgBen2+3xiXErnjm
      GUBzeenoqicdTVMql4jk6+QPzcQr5TlWgRr4wd//iLXlBYJdh3d+RELsomdeApUzMW5PL2Bm
      1rly7QbxrHwSLF4tzwxAOrZKIlXkg8uf8uOfvcOD27O7NS4hdsUzA9DY1UcpfAf/odOEKiW6
      B3p2a1xC7IpnT4I9Qb77458++fpky46PR4hdJf8ULxxNAiAcTQIgHE0CIBxNAiAcTQIgHE0C
      IBxNAiAcTQIgHE0CIBzNvpqEL7l8sUKhbE9pwaagD0VRbGlL7K0aA1Bh6vpNItkSR4+fJD4/
      wUqiwpk3T7F49wbRHIydGmIzXKLemyer1tPVHLRn5C/ol5en+NXle7a09b//9tOvfpL4Rqgx
      ACoHB4fp2lxkI5WkpIQ4P6JzZ2IBb6iN4a6t8uiFeJWYmWNoZN+25dHBzjLd1vZlv22uBL4X
      pcXt7lLKo9twf4BcfIG4EaS308eDbAmX300lu0l9axNuj4qZTRNeekiouxddVTBNA8uyME2T
      anWr3He1atiwK1sMw3jS7tNM077KvNu1vxuqhn39ml9ynJymtgAYST66NkFzZwv+uqNkonP8
      eanK4Mk3WZwYZ7lqcnRsFONQgHpPkoVwgt7ORhS23n12pDy6pj9p92mqZt98X9f1PZkDuGw8
      TqqmbXucnKa2I6rW8867P9x6qGp0tVzAtEBTVTrOv7X1WFNpCYCidNp+CheiVjWXR//8u7f2
      ZF1VUZ56rD55uhAvFfkcQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDia
      BEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaY4rj7ob/
      /uMEm6lCze0c7KjnR+eO2DAi8VUkADb6+O4Kixupmts5caRTArBL5BJIOFrNAcglo2xspgGL
      ZHSFqbllLMsiHl5iZn4VkwqZTJFqKUcqV7RhyELYp8ZLoCqxSJSU4qc15Ob+wzXaAib3llxk
      N5M0ecosRTQKsSqKEaW9b8ieUQthkxoDoNNz8AD3VuIYZpFQYxc9hzx8fClM25FWOgM6K7FN
      FqZnaT40xIDfjWEYmKaJaZqUy2XA3nLjRrX6pN3PbTfsK8FeqWx/pxm76u1bprXtPnxZv1+H
      YRjb9uE0NQZg62YUlgWq4iadjhFftKjb30Y8lsJXKqP6Wug58gZmOUKqUCHkc6FpGpVKZWfK
      o+s6brf7i9s1zbY+XC7XtuXR7SqZrqjKtvvgctkXAE3Ttu1jN3w2vUokka+5nWCdm7dGempq
      o8ZXXpmb47fJVA18/hC9HQEeJCzGjnYRWZplLRdgpLeFlLdCqK6RWK5IyCc16Z3u/U/mGJ9Z
      r7mdnvb6vQ6Ah+Pnzj/1dQMt+7cetfccof3R1sbGrXeadk9tvQlhN1kGFY4mARCOJgEQjiYB
      EI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCO
      JgEQjiYBEI4mARCOJgEQjiYBEI62M9WhrSqzE7fYyCmMnRwkvlEi5C2QVUJ0NgV2pEshvo4d
      CUA5k6Tka+Zou8naepRSyiJaTjA43LET3QnxBe9/Mvdcz9uRABhVC5/Pg8erYeSSLM3O0th3
      BJcmV1xid/zHr8ef63k7EgBPoI7o1HXWDYNDo8foGTxO0JVkaSNJT0cD9lTQFDvhk6kVfn11
      xpa2/vUfztEQ8NrS1k7ZkQCo7jpOnjpNxVTwenVaA6AqHRjmTvQm7BRPF7i7ELWlrUrVvorc
      O2WHbpGkoLs9Txp/XJhZV9kqjW5tVZV+XLLc59YY7mu1peeAV9+2FHp7Q51tfZjm9kk+tL+R
      en/tFZcPttdvuw+agm370BT0bNtHY9BrWx+asn1Z+oPt9ZQrtZfEb2v0f2nZ++fdB8Wyq6j9
      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
      QqwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='group by visually' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='heat maps' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='highlight tables' width='192'>
      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
      ET/NFQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='pie chart' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='sets' width='184'>
      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
      C6CZoR+NZ0EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='symbol map' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
